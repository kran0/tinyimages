---
name: 'build and deploy images'

on:
  push:
    branches:
      - master
  schedule:
    - cron: '15 4 * * sun,tue,thu,sat'

jobs:
  alpine-based:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        alpine-version: [ edge, latest ]
        name: [ socat, tor, svn ]
        include:

          - name: socat
            packages: socat so:libncursesw.so.6
            dockerfile-bottom: |
             ENTRYPOINT [ "/usr/bin/socat" ]
             CMD [ "-h" ]

          - name: tor
            packages: tor
            dockerfile-bottom: |
             ENTRYPOINT [ "/usr/bin/tor" ]
             CMD [ "-h" ]

          - name: svn
            packages: subversion
            dockerfile-bottom: |
             ENTRYPOINT [ "/usr/bin/svn" ]
             CMD [ "-h" ]

#          - name: openjdk8-jre
#            packages: openjdk8-jre so:openjdk8:libjli.so
#            entrypoint: /usr/lib/jvm/java-1.8-openjdk/jre/bin/java
#            command: -h
#ENV PATH /usr/lib/jvm/java-1.8-openjdk/bin/


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prep
        run: |
         DOCKER_IMAGE=${{ secrets.DOCKERHUB_USER }}/tiny

         case "${{ matrix.alpine-version }}" in
          'edge') TAG="${DOCKER_IMAGE}:${{matrix.name}}-edge" ;;
          *     ) TAG="${DOCKER_IMAGE}:${{matrix.name}}"      ;;
         esac

         # Do the tinyimages magic here
         echo '${{ matrix.dockerfile-bottom }}' >> ./Dockerfile-alpine

         # Set output parameters.
         echo ::set-output name=tag::${TAG}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile-alpine
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          tags: ${{ steps.prep.outputs.tag }}
          build-args: |
            ALPINE_VERSION=${{ matrix.alpine-version }}
            PACKAGES=${{ matrix.packages }}
            ADDFILES=${{ matrix.addfiles }}
            ENTRYPOINT=${{ matrix.entrypoint }}
            COMMAND=${{ matrix.command }}

      - name: Test default arch
        env:
          COMPOSE_FILE: ./tests/compose-sut.yaml
          IMAGE_NAME: ${{ steps.prep.outputs.tag }}
        run: |
         docker-compose up sut
         docker-compose logs
         docker-compose down
