---
name: 'build and deploy images'

on:
  push:
    branches:
      - master
  schedule:
    - cron: '15 4 * * sun,tue,thu,sat'

jobs:
  alpine-based:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        alpine-version: [ latest, edge ]
        alpine-platforms: [ linux/amd64 ]
        include:

          - name: socat
            packages: socat so:libncursesw.so.6
            entrypoint: /usr/bin/socat
            command: -h

          - name: tor
            packages: tor
            entrypoint: /usr/bin/tor
            command: -h

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKERHUB_USER }}/${GITHUB_REPOSITORY#*/}

          case "${{ matrix.alpine-version }}" in
           'edge') TAGS="${DOCKER_IMAGE}:${{matrix.name}}-edge" ;;
           *     ) TAGS="${DOCKER_IMAGE}:${{matrix.name}}"      ;;
          esac

          if [ ${{ matrix.alpine-version }} == 'edge' ]; then
            TAGS="${DOCKER_IMAGE}:${{matrix.name}}-${{ matrix.alpine-version }}"
          fi

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=test_tag::${TEST_TAG}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=build_args::${BUILD_ARGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: "{{defaultContext}}:apkbased"
          file: Dockerfile-alpine
          platforms: ${{ matrix.alpine-platforms }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/tinyimages/${{ matrix.name }}
          build-args: [ "ALPINE_VERSION=${{ matrix.alpine-version }}",
                        "PACKAGES=${{ matrix.packages }}",
                        "ADDFILES=${{ matrix.addfiles }}",
                        "ENTRYPOINT=${{ matrix.entrypoint }}",
                        "COMMAND=${{ matrix.command }}" ]
